library(dplyr)
library(magrittr)
library(lme4)
library(lattice)
load("JAGS_Ex.rdata")
birdsL
#Make long form of just bat intearactions.
bats <- dplyr::filter(dat, Frug_Group=="Bats")
batsL <- tidyr::expand(bats, Frugivore_Species, Plant_Species)
#Left_Join in our trait data and denote real entries
batsL <-  bats %>% select(., Frugivore_Species, fc1, fc2, fc3) %>% unique() %>% left_join(batsL, ., by="Frugivore_Species")
library(PVR)
library(ape)
library(phytools)
plant_tree <- ape::compute.brlen(plant_tree, 1) #set branch lengths to 1
library(rotl)
plant_names <- rotl::tnrs_match_names(unique(dat$Plant_Species))
plant_names %<>% filter(., approximate_match ==FALSE) #Only keep correct matches
plant_names %<>% filter(., flags != "incertae_sedis_inherited")
plant_names %<>% filter(., flags != "hybrid, sibling_higher")
dat %<>% filter(., Plant_Species %in% plant_names$unique_name)
tree <- ape::read.nexus("Jansenss_2020_AngiTree.tre")
plot(tree, type="fan")
dat$PlantName_Under <- gsub(" ","_", dat$Plant_Species)
table(unique(dat$PlantName_Under) %in% tree$tip.label)
plant_tree <- rotl::tol_induced_subtree(ott_ids = plant_names$ott_id)
frug_names <- rotl::tnrs_match_names(unique(dat$Frugivore_Species))
frug_names %<>% filter(., approximate_match ==FALSE) #Only keep correct matches
frug_names %<>% filter(., flags != "incertae_sedis_inherited")
frug_names %<>% filter(., flags != "hybrid, sibling_higher")
frug_tree <- rotl::tol_induced_subtree(ott_ids = frug_names$ott_id)
cor.test(x=dat$fruit_diameter, y=dat$Frug_Mean_Gape_Size)
summary(lm(dat$Frug_Mean_Gape_Size~dat$fruit_diameter))
#Alright, these things (as we'd guess) are highly correlated. Let's use them to predict links.
test_long <- data.frame(get.edgelist(test_web))
colnames(test_long) <- c("Frugivore_Species", "Plant_Species")
test_dat <- left_join(test_long, dat, by=c("Frugivore_Species", "Plant_Species"))
#Perform the regression on our test data
test_dat %<>% filter(., is.na(Frug_Mean_Gape_Size)==FALSE & is.na(fruit_diameter)==FALSE)
Di_Gape_lm <- lm(Frug_Mean_Gape_Size~fruit_diameter, data=test_dat)
summary(Di_Gape_lm)
test_dat$Di_Gape_SSQ <- Di_Gape_lm$residuals^2 #This is only doing it on the test version; not the full dataset!
dat %<>% filter(., is.na(Frug_Mean_Gape_Size)==FALSE & is.na(fruit_diameter)==FALSE)
dat %<>% filter(., is.na(Frug_Mean_Gape_Size)==FALSE & is.na(fruit_diameter)==FALSE)
dat %<>% filter(., is.na(Frugivory_score)==FALSE & is.na(fruit_diameter)==FALSE)
dat %<>% filter(., is.na(fruit_length)==FALSE & is.na(fruit_diameter)==FALSE)
dat$pred_gape <- stats::predict(object=Di_Gape_lm, newdata=data.frame(dat))
dat$Di_Gape_SSQ <- (dat$pred_gape - dat$Frug_Mean_Gape_Size)^2 #This is for all the real interactions; we need all
full_L <- tidyr::expand(dat, Frugivore_Species, Plant_Species)
full_L <-  dat %>% select(., Frugivore_Species, Frug_Mean_Gape_Size, Frug_Class, Frug_Order, Frug_Family, Frug_Genus, Frug_Epitetus, Frug_Group, Frug_Body_Mass, Frugivory_score, Frug_Migration_status, Frug_IUCN, Frug_Population_Trend) %>% unique() %>% left_join(full_L, ., by="Frugivore_Species")
full_L <-  dat %>% select(., Plant_Species, fruit_diameter, fruit_length, Fruit_color, Plant_distribution, Plant_origin, Plant_Form, Plants_IUCN) %>% unique() %>% left_join(full_L, ., by="Plant_Species")
full_L$pred_gape <- stats::predict(object=Di_Gape_lm, newdata=data.frame(full_L))
full_L$Di_Gape_SSQ <- (full_L$pred_gape - full_L$Frug_Mean_Gape_Size)^2
full_L <- dat %>% select(., Frugivore_Species, Plant_Species) %>% mutate(., real=1) %>% left_join(full_L, ., by=c("Frugivore_Species", "Plant_Species"))
full_L$real[is.na(full_L$real)==TRUE] <- 0
AUC_gape_fruit <- roc(data=data.frame(full_L), response=real, predictor=Di_Gape_SSQ)
AUC_gape_fruit
plot(AUC_gape_fruit)
pointsobject <- full_L %>% dplyr::select(., Frugivore_Species, Plant_Species, real, Frug_Mean_Gape_Size, Frug_Body_Mass, Frugivory_score, fruit_diameter, fruit_length, Fruit_color)
p <- pointsobject[(pointsobject[,'real'] == 1), 4:(ncol(pointsobject)-1)]
bgrd <- pointsobject[,4:(ncol(pointsobject)-1)]
#Recreating the plug and play approach
mean.p <- colMeans(p, na.rm = TRUE)         # estimated mean of presence points
mean.bgrd <- colMeans(bgrd)   # estimated mean of background points
sigma.p <- stats::cov(p)             # estimated covariance of presence points
sigma.bgrd <- stats::cov(bgrd)       # estimated covariance of background points
require(corpcor)
# robust estimated covariance of presence points
p.est <- as.numeric(cov.shrink(p, verbose= TRUE))
sigma.p <- matrix(as.numeric(p.est), nrow=sqrt(length(p.est)))  #make it into a square matrix?
# robust estimated covariance of background points
bgrd.est <- as.numeric(cov.shrink(bgrd, verbose = TRUE))
sigma.bgrd <- matrix(as.numeric(bgrd.est), nrow=sqrt(length(bgrd.est))) # reformat
model=list(mean.p=mean.p, sigma.p=sigma.p, mean.bgrd=mean.bgrd, sigma.bgrd=sigma.bgrd)
predict.pp.gauss <- function(model, x){
require(mvtnorm)
f1 <- dmvnorm(x, mean=model$mean.p, sigma=model$sigma.p, log=TRUE)
f0 <- dmvnorm(x, mean=model$mean.bgrd, sigma=model$sigma.bgrd, log=TRUE)
return(S=exp(f1-f0))
}
pp.kde <- function(p, bgrd){
require(np)
f1 <- npudens(p, bwmethod='normal-reference')
f0 <- npudens(bgrd, bwmethod='normal-reference')
return(model=list(f1=f1,f0=f0))
}
predict.pp.kde <- function(model, x){
require(np)
f1 <- fitted(npudens(bws=model$f1$bws, edat=data.frame(x), bwmethod='normal-reference'))
f0 <- fitted(npudens(bws=model$f0$bws, edat=data.frame(x), bwmethod='normal-reference'))
return(S=f1/f0)
}
red.preds.gauss <- predict.pp.gauss(model, x=bgrd)
full_L$suit.gauss <- red.preds.gauss
stuff <- pp.kde(p, bgrd)
#Make long form of just bat intearactions.
bats <- dplyr::filter(dat, Frug_Group=="Bats")
batsL <- tidyr::expand(bats, Frugivore_Species, Plant_Species)
#Left_Join in our trait data and denote real entries
batsL <-  bats %>% select(., Frugivore_Species, Frug_Mean_Gape_Size, Frug_Body_Mass) %>% unique() %>% left_join(batsL, ., by="Frugivore_Species")
batsL <-  dat %>% select(., Plant_Species, fruit_diameter, fruit_length) %>% unique() %>% left_join(batsL, ., by="Plant_Species")
batsL <- bats %>% select(., Frugivore_Species, Plant_Species) %>% mutate(., real=1) %>% left_join(batsL, ., by=c("Frugivore_Species", "Plant_Species"))
batsL$real[is.na(batsL$real)==TRUE] <- 0
batsL %<>% filter(., Frugivore_Species != "Carollia castanea") #wrong gape size
#Sample our overall data
batsL_sample <- batsL[sample(nrow(batsL)/2, replace=T),]
p <- batsL_sample[batsL_sample$real ==1,3:(ncol(batsL_sample)-1)]
bgrd <- batsL_sample[,3:(ncol(batsL_sample)-1)]
mean.p <- colMeans(p, na.rm = TRUE)         # estimated mean of presence points
mean.bgrd <- colMeans(bgrd)   # estimated mean of background points
sigma.p <- stats::cov(p)             # estimated covariance of presence points
sigma.bgrd <- stats::cov(bgrd)
batsL[,3:(ncol(batsL_sample)-1)]
require(np)
f1 <- npudensbw(p, bwmethod='normal-reference')
f0 <- npudensbw(bgrd, bwmethod='normal-reference')
f1_fit <- fitted(npudens(bws=f1, edat=batsL[,3:(ncol(batsL_sample)-1)], bwmethod='normal-reference'))
f0_fit<- fitted(npudens(bws=f0, edat=batsL[,3:(ncol(batsL_sample)-1)], bwmethod='normal-reference'))
S <- f1_fit/f0_fit
batsL$S <- S
AUC_PP_Bats <- roc(data=batsL, response=real, predictor=S)
plot(AUC_PP_Bats)
AUC_PP_Bats
stuff <- pp.kde(p, bgrd)
full_L$suit.kde
plot(AUC_PP_Bats)
AUC_PP_Bats
plot(AUC_PP_Bats)
AUC_PP_Traits_Bats <- roc(data=batsL, response=real, predictor=S)
plot(AUC_PP_Traits_Bats)
#Make long form of just bat intearactions.
birds <- dplyr::filter(dat, Frug_Class=="Aves")
birdsL <- tidyr::expand(birds, Frugivore_Species, Plant_Species)
#Left_Join in our trait data and denote real entries
birdsL <-  birds %>% select(., Frugivore_Species, Frug_Mean_Gape_Size, Frug_Body_Mass) %>% unique() %>% left_join(birdsL, ., by="Frugivore_Species")
birdsL <-  dat %>% select(., Plant_Species, fruit_diameter, fruit_length) %>% unique() %>% left_join(birdsL, ., by="Plant_Species")
birdsL <- birds %>% select(., Frugivore_Species, Plant_Species) %>% mutate(., real=1) %>% left_join(birdsL, ., by=c("Frugivore_Species", "Plant_Species"))
birdsL$real[is.na(birdsL$real)==TRUE] <- 0
birdsL %<>% filter(., Frugivore_Species != "Carollia castanea") #wrong gape size
#Sample our overall data
birdsL_sample <- birdsL[sample(nrow(birdsL)/2, replace=T),]
p <- birdsL_sample[birdsL_sample$real ==1,3:(ncol(birdsL_sample)-1)]
bgrd <- birdsL_sample[,3:(ncol(birdsL_sample)-1)]
mean.p <- colMeans(p, na.rm = TRUE)         # estimated mean of presence points
mean.bgrd <- colMeans(bgrd)   # estimated mean of background points
sigma.p <- stats::cov(p)             # estimated covariance of presence points
sigma.bgrd <- stats::cov(bgrd)
birdsL[,3:(ncol(birdsL_sample)-1)]
require(np)
f1 <- npudensbw(p, bwmethod='normal-reference')
f0 <- npudensbw(bgrd, bwmethod='normal-reference')
f1_fit <- fitted(npudens(bws=f1, edat=birdsL[,3:(ncol(birdsL_sample)-1)], bwmethod='normal-reference'))
f0_fit<- fitted(npudens(bws=f0, edat=birdsL[,3:(ncol(birdsL_sample)-1)], bwmethod='normal-reference'))
S <- f1_fit/f0_fit
birdsL$S <- S
AUC_PP_Traits_birds <- roc(data=birdsL, response=real, predictor=S)
plot(AUC_PP_Traits_birds)
AUC_PP_Traits_birds
birdsL$S
real
View(birdsL)
AUC_PP_Traits_birds <- roc(data=birdsL, response=real, predictor=S)
table(birdsL$real)
rangE(birdsL$S)
rangr(birdsL$S)
range(birdsL$S)
View(f1)
f1
f0
f1_fit
range(f1_fit)
f0_fit
range(f0_fit)
f0_fit[f0_fit==0]
length(f0_fit[f0_fit==0])
View(birdsL)
View(batsL_sample)
f0_fit <- fitted(npudens(bws=f0, edat=birdsL[,3:(ncol(birdsL_sample)-1)], bwmethod='normal-reference'))+0.000000001
S
range(S)
is.NA(S)
is.Na(S)
is.na(S)
table(is.na(S))
birdsL$S <- S
birdsL[is.na(birdsL$S)==TRUE,]
birdsL <- birdsL[is.na(birdsL$S)==FALSE,]
AUC_PP_Traits_birds <- roc(data=birdsL, response=real, predictor=S)
range(birdsL$S)
birdsL$S[birdsL$S==Inf]
birdsL$S[birdsL$S==Inf] <- 1
range(birdsL$S)
S <- f1_fit/f0_fit
birdsL$S <- S
S
f1_fit <- fitted(npudens(bws=f1, edat=birdsL[,3:(ncol(birdsL_sample)-1)], bwmethod='normal-reference'))
f0_fit <- fitted(npudens(bws=f0, edat=birdsL[,3:(ncol(birdsL_sample)-1)], bwmethod='normal-reference'))
S <- f1_fit/f0_fit
birdsL$S <- S
birdsL <- birdsL[is.na(birdsL$S)==FALSE,]
S
birdsL$S[birdsL$S==Inf] <- max(birdsL$S)+1
AUC_PP_Traits_birds <- roc(data=birdsL, response=real, predictor=S)
birdsL$S[birdsL$S==Inf]
max(birdsL$S)
?max
max(birdsL$S, na.rm=TRUE)+1
max(birdsL$S[birdsL$S==Inf], na.rm=TRUE)+1
max(birdsL$S[birdsL$S!=Inf], na.rm=TRUE)+1
birdsL$S[birdsL$S==Inf] <- max(birdsL$S[birdsL$S!=Inf], na.rm=TRUE)+1
AUC_PP_Traits_birds <- roc(data=birdsL, response=real, predictor=S)
plot(AUC_PP_Traits_birds)
AUC_PP_Traits_birds
plot(AUC_PP_Traits_birds)
AUC_PP_Traits_birds
library(PVR)
library(ape)
library(phytools)
plant_tree <- ape::compute.brlen(plant_tree, 1) #set branch lengths to 1
plant_tree <- phytools::force.ultrametric(plant_tree) #force back to being ultrametric (may be bad)
plant_litter <- PVR::PVRdecomp(phy=plant_tree, type="newick", scale=TRUE)
round((plant_litter@Eigen$values)/sum((plant_litter@Eigen$values)),3)*100 #first three vectors only contain about 28% of variation :(
plant_PhyEig <-data.frame(plant_tree$tip.label, plant_litter@Eigen$vectors[,1:3])
plant_PhyEig %<>% rename(., "Plant_Species"=plant_tree.tip.label)
plant_PhyEig$Plant_Species <- gsub("_ott.*","", x=plant_PhyEig$Plant_Species)
plant_PhyEig$Plant_Species <- gsub(pattern="_", replace=" ", x=plant_PhyEig$Plant_Species)
dat <- left_join(dat, plant_PhyEig, by="Plant_Species")
frug_tree <- ape::compute.brlen(frug_tree, 1) #set branch lengths to 1
frug_tree <- phytools::force.ultrametric(frug_tree) #force back to being ultrametric (may be bad)
frug_litter <- PVR::PVRdecomp(phy=frug_tree, type="newick", scale=TRUE)
round((frug_litter@Eigen$values)/sum((frug_litter@Eigen$values)),3)*100 #first three vectors contain about 33.8% of variation
frug_PhyEig <-data.frame(frug_tree$tip.label, frug_litter@Eigen$vectors[,1:3])
frug_PhyEig %<>% rename(., "Frugivore_Species"=frug_tree.tip.label)
frug_PhyEig$Frugivore_Species <- gsub("_ott.*","", x=frug_PhyEig$Frugivore_Species)
frug_PhyEig$Frugivore_Species <- gsub(pattern="_", replace=" ", x=frug_PhyEig$Frugivore_Species)
colnames(frug_PhyEig) <- c("Frugivore_Species", "fc1", "fc2", "fc3")
dat <- left_join(dat, frug_PhyEig, by="Frugivore_Species")
#Make long form of just bat intearactions.
bats <- dplyr::filter(dat, Frug_Group=="Bats")
batsL <- tidyr::expand(bats, Frugivore_Species, Plant_Species)
#Left_Join in our trait data and denote real entries
batsL <-  bats %>% select(., Frugivore_Species, fc1, fc2, fc3) %>% unique() %>% left_join(batsL, ., by="Frugivore_Species")
batsL <-  dat %>% select(., Plant_Species, c1, c2, c3) %>% unique() %>% left_join(batsL, ., by="Plant_Species")
batsL <- bats %>% select(., Frugivore_Species, Plant_Species) %>% mutate(., real=1) %>% left_join(batsL, ., by=c("Frugivore_Species", "Plant_Species"))
batsL$real[is.na(batsL$real)==TRUE] <- 0
batsL %<>% filter(., Frugivore_Species != "Carollia castanea") #wrong gape size
batsL %<>% filter(., is.na(c1)==FALSE)
batsL %<>% filter(., is.na(fc1)==FALSE)
#Sample our overall data
batsL_sample <- batsL[sample(nrow(batsL)/2, replace=T),]
p <- batsL_sample[batsL_sample$real ==1,3:(ncol(batsL_sample)-1)]
bgrd <- batsL_sample[,3:(ncol(batsL_sample)-1)]
mean.p <- colMeans(p, na.rm = TRUE)         # estimated mean of presence points
mean.bgrd <- colMeans(bgrd)   # estimated mean of background points
sigma.p <- stats::cov(p)             # estimated covariance of presence points
sigma.bgrd <- stats::cov(bgrd)
require(np)
f1 <- npudensbw(p, bwmethod='normal-reference')
f0 <- npudensbw(bgrd, bwmethod='normal-reference')
f1_fit <- fitted(npudens(bws=f1, edat=batsL[,3:(ncol(batsL_sample)-1)], bwmethod='normal-reference'))
f0_fit<- fitted(npudens(bws=f0, edat=batsL[,3:(ncol(batsL_sample)-1)], bwmethod='normal-reference'))
S <- f1_fit/f0_fit
batsL$S <- S
AUC_PP_Phylo_Bats <- roc(data=batsL, response=real, predictor=S)
plot(AUC_PP_Phylo_Bats)
AUC_PP_Phylo_Bats
#Make long form of just bat intearactions.
birds <- dplyr::filter(dat, Frug_Class=="Aves")
birdsL <- tidyr::expand(birds, Frugivore_Species, Plant_Species)
#Left_Join in our trait data and denote real entries
birdsL <-  birds %>% select(., Frugivore_Species, fc1, fc2, fc3) %>% unique() %>% left_join(birdsL, ., by="Frugivore_Species")
birdsL <-  dat %>% select(., Plant_Species, c1, c2, c3) %>% unique() %>% left_join(birdsL, ., by="Plant_Species")
birdsL <- birds %>% select(., Frugivore_Species, Plant_Species) %>% mutate(., real=1) %>% left_join(birdsL, ., by=c("Frugivore_Species", "Plant_Species"))
birdsL$real[is.na(birdsL$real)==TRUE] <- 0
birdsL %<>% filter(., Frugivore_Species != "Carollia castanea") #wrong gape size
birdsL %<>% filter(., is.na(c1)==FALSE)
birdsL %<>% filter(., is.na(fc1)==FALSE)
#Sample our overall data
birdsL_sample <- birdsL[sample(nrow(birdsL)/2, replace=T),]
p <- birdsL_sample[birdsL_sample$real ==1,3:(ncol(birdsL_sample)-1)]
bgrd <- birdsL_sample[,3:(ncol(birdsL_sample)-1)]
mean.p <- colMeans(p, na.rm = TRUE)         # estimated mean of presence points
mean.bgrd <- colMeans(bgrd)   # estimated mean of background points
sigma.p <- stats::cov(p)             # estimated covariance of presence points
sigma.bgrd <- stats::cov(bgrd)
require(np)
f1 <- npudensbw(p, bwmethod='normal-reference')
f0 <- npudensbw(bgrd, bwmethod='normal-reference')
f1_fit <- fitted(npudens(bws=f1, edat=birdsL[,3:(ncol(birdsL_sample)-1)], bwmethod='normal-reference'))
f0_fit<- fitted(npudens(bws=f0, edat=birdsL[,3:(ncol(birdsL_sample)-1)], bwmethod='normal-reference'))
S <- f1_fit/f0_fit
birdsL$S <- S
AUC_PP_Phylo_birds <- roc(data=birdsL, response=real, predictor=S)
plot(AUC_PP_Phylo_birds)
AUC_PP_Phylo_birds
AUC_PP_Phylo_birds
plot(AUC_PP_Phylo_birds)
AUC_PP_Phylo_birds <- roc(data=birdsL, response=real, predictor=S)
plot(AUC_PP_Phylo_birds)
AUC_PP_Phylo_birds
plot(AUC_PP_Traits_birds)
plot(AUC_PP_Traits_birds)
plot(AUC_PP_Traits_Bats)
plot(AUC_PP_Traits_birds)
plot(AUC_PP_Phylo_Bats)
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait Prediction AUC; Bats")
plot(AUC_PP_Phylo_Bats, main="Plug & Play PhyloDecomposition Prediction AUC; Bats")
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait Prediction AUC; Bats")
plot(AUC_PP_Phylo_Bats, main="Plug & Play PhyloDecomposition Prediction AUC; Bats")
plot(AUC_PP_Traits_birds, main="Plug & Play Trait Prediction AUC; Birds")
plot(AUC_PP_Phylo_birds, main="Plug & Play PhyloDecomposition Prediction AUC; Birds")
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait Prediction AUC; Bats")
text("AUX=0.something")
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait Prediction AUC; Bats")
mtext("AUX=0.something", side=3)
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait Prediction AUC; Bats")
mtext("AUX=0.something", side=2)
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait Prediction AUC; Bats")
mtext("AUX=0.something", side=1)
AUC_PP_Traits_Bats
AUC_PP_Phylo_Bats
AUC_PP_Traits_birds
AUC_PP_Phylo_birds
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait Prediction AUC; Bats")
mtext("AUC=0.7621", side=1)
plot(AUC_PP_Phylo_Bats, main="Plug & Play PhyloDecomposition Prediction AUC; Bats")
mtext("AUC=0.8211", side=1)
plot(AUC_PP_Traits_birds, main="Plug & Play Trait Prediction AUC; Birds")
mtext("AUC=0.6782", side=1)
plot(AUC_PP_Phylo_birds, main="Plug & Play PhyloDecomposition Prediction AUC; Birds")
mtext("AUC=0.6009", side=1)
par(mfrow=2)
par(mfrow=c(2,2))
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait Prediction AUC; Bats")
mtext("AUC=0.7621", side=1)
plot(AUC_PP_Phylo_Bats, main="Plug & Play PhyloDecomposition Prediction AUC; Bats")
mtext("AUC=0.8211", side=1)
plot(AUC_PP_Traits_birds, main="Plug & Play Trait Prediction AUC; Birds")
mtext("AUC=0.6782", side=1)
plot(AUC_PP_Phylo_birds, main="Plug & Play PhyloDecomposition Prediction AUC; Birds")
mtext("AUC=0.6009", side=1)
par(mfrow=c(2,2))
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait AUC; Bats")
mtext("AUC=0.7621", side=1)
plot(AUC_PP_Phylo_Bats, main="Plug & Play PhyloDecomposition AUC; Bats")
mtext("AUC=0.8211", side=1)
plot(AUC_PP_Traits_birds, main="Plug & Play Trait AUC; Birds")
mtext("AUC=0.6782", side=1)
plot(AUC_PP_Phylo_birds, main="Plug & Play PhyloDecomposition AUC; Birds")
mtext("AUC=0.6009", side=1)
setwd("~/Documents/Current_Work/RA2021")
pdf(file="PlugPlayTestAUC.pdf", height = 8.5, width=11)
par(mfrow=c(2,2))
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait AUC; Bats")
mtext("AUC=0.7621", side=1)
plot(AUC_PP_Phylo_Bats, main="Plug & Play PhyloDecomposition AUC; Bats")
mtext("AUC=0.8211", side=1)
plot(AUC_PP_Traits_birds, main="Plug & Play Trait AUC; Birds")
mtext("AUC=0.6782", side=1)
plot(AUC_PP_Phylo_birds, main="Plug & Play PhyloDecomposition AUC; Birds")
mtext("AUC=0.6009", side=1)
plot(AUC_PP_Phylo_birds, main="Plug & Play PhyloDecomposition AUC; Birds")
mtext("AUC=0.6009", side=1)
mtext("First three phylogenetic eigenvectors  explain 28% and 33.8% of variation in plants, animals respectively", side=4)
pdf(file="PlugPlayTestAUC.pdf", height = 8.5, width=11)
par(mfrow=c(2,2))
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait AUC; Bats")
mtext("AUC=0.7621", side=1)
plot(AUC_PP_Phylo_Bats, main="Plug & Play PhyloDecomposition AUC; Bats")
mtext("AUC=0.8211", side=1)
plot(AUC_PP_Traits_birds, main="Plug & Play Trait AUC; Birds")
mtext("AUC=0.6782", side=1)
plot(AUC_PP_Phylo_birds, main="Plug & Play PhyloDecomposition AUC; Birds")
mtext("AUC=0.6009", side=1)
mtext("First three phylogenetic eigenvectors  explain 28% and 33.8% of variation in plants, animals respectively", side=4)
#Plants: 28%, animals 33.8% of variation
pdf(file="PlugPlayTestAUC.pdf", height = 8.5, width=11)
par(mfrow=c(2,2))
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait AUC; Bats")
mtext("AUC=0.7621", side=1)
plot(AUC_PP_Phylo_Bats, main="Plug & Play PhyloDecomposition AUC; Bats")
mtext("AUC=0.8211", side=1)
plot(AUC_PP_Traits_birds, main="Plug & Play Trait AUC; Birds")
mtext("AUC=0.6782", side=1)
plot(AUC_PP_Phylo_birds, main="Plug & Play PhyloDecomposition AUC; Birds")
mtext("AUC=0.6009", side=1)
mtext("3 Eigenvectors each: 28% and 33.8% of variation in plants, animals resp.", side=4)
#Plants: 28%, animals 33.8% of variation
text(x=0, y=1, "3 Eigenvectors each: 28% and 33.8% of variation in plants, animals resp.")
plot(AUC_PP_Phylo_birds, main="Plug & Play PhyloDecomposition AUC; Birds")
mtext("AUC=0.6009", side=1)
text(x=0, y=1, "3 Eigenvectors each: 28% and 33.8% of variation in plants, animals resp.")
pdf(file="PlugPlayTestAUC.pdf", height = 8.5, width=11)
par(mfrow=c(2,2))
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait AUC; Bats")
mtext("AUC=0.7621", side=1)
plot(AUC_PP_Phylo_Bats, main="Plug & Play PhyloDecomposition AUC; Bats")
mtext("AUC=0.8211", side=1)
plot(AUC_PP_Traits_birds, main="Plug & Play Trait AUC; Birds")
mtext("AUC=0.6782", side=1)
plot(AUC_PP_Phylo_birds, main="Plug & Play PhyloDecomposition AUC; Birds")
mtext("AUC=0.6009", side=1)
text(x=0, y=1, "3 Eigenvectors each: 28% and 33.8% of variation in plants, animals resp.")
#Plants: 28%, animals 33.8% of variation
pdf(file="PlugPlayTestAUC.pdf", height = 8.5, width=11)
par(mfrow=c(2,2))
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait AUC; Bats")
mtext("AUC=0.7621", side=1)
plot(AUC_PP_Phylo_Bats, main="Plug & Play PhyloDecomposition AUC; Bats")
mtext("AUC=0.8211", side=1)
plot(AUC_PP_Traits_birds, main="Plug & Play Trait AUC; Birds")
mtext("AUC=0.6782", side=1)
plot(AUC_PP_Phylo_birds, main="Plug & Play PhyloDecomposition AUC; Birds")
mtext("AUC=0.6009", side=1)
text(x=0, y=1, "3 Eigenvectors each: 28% and 33.8% of variation in plants, animals resp.")
#Plants: 28%, animals 33.8% of variation
pdf(file="PlugPlayTestAUC.pdf", height = 8.5, width=11)
par(mfrow=c(2,2))
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait AUC; Bats")
mtext("AUC=0.7621", side=1)
plot(AUC_PP_Phylo_Bats, main="Plug & Play PhyloDecomposition AUC; Bats")
mtext("AUC=0.8211", side=1)
plot(AUC_PP_Traits_birds, main="Plug & Play Trait AUC; Birds")
mtext("AUC=0.6782", side=1)
plot(AUC_PP_Phylo_birds, main="Plug & Play PhyloDecomposition AUC; Birds")
#mtext("AUC=0.6009", side=1)
text(x=0, y=1, "3 Eigenvectors each: 28% and 33.8% of variation in plants, animals resp.")
#Plants: 28%, animals 33.8% of variation
pdf(file="PlugPlayTestAUC.pdf", height = 8.5, width=11)
par(mfrow=c(2,2))
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait AUC; Bats")
mtext("AUC=0.7621", side=1)
plot(AUC_PP_Phylo_Bats, main="Plug & Play PhyloDecomposition AUC; Bats")
mtext("AUC=0.8211", side=1)
plot(AUC_PP_Traits_birds, main="Plug & Play Trait AUC; Birds")
mtext("AUC=0.6782", side=1)
plot(AUC_PP_Phylo_birds, main="Plug & Play PhyloDecomposition AUC; Birds")
#mtext("AUC=0.6009", side=1)
text(x=-5, y=3, "3 Eigenvectors each: 28% and 33.8% of variation in plants, animals resp.")
#Plants: 28%, animals 33.8% of variation
pdf(file="PlugPlayTestAUC.pdf", height = 8.5, width=11)
par(mfrow=c(2,2))
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait AUC; Bats")
mtext("AUC=0.7621", side=1)
plot(AUC_PP_Phylo_Bats, main="Plug & Play PhyloDecomposition AUC; Bats")
mtext("AUC=0.8211", side=1)
plot(AUC_PP_Traits_birds, main="Plug & Play Trait AUC; Birds")
mtext("AUC=0.6782", side=1)
plot(AUC_PP_Phylo_birds, main="Plug & Play PhyloDecomposition AUC; Birds")
#mtext("AUC=0.6009", side=1)
text(x=-1, y=1.1, "3 Eigenvectors each: 28% and 33.8% of variation in plants, animals resp.")
#Plants: 28%, animals 33.8% of variation
pdf(file="PlugPlayTestAUC.pdf", height = 8.5, width=11)
par(mfrow=c(2,2))
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait AUC; Bats")
mtext("AUC=0.7621", side=1)
plot(AUC_PP_Phylo_Bats, main="Plug & Play PhyloDecomposition AUC; Bats")
mtext("AUC=0.8211", side=1)
plot(AUC_PP_Traits_birds, main="Plug & Play Trait AUC; Birds")
mtext("AUC=0.6782", side=1)
plot(AUC_PP_Phylo_birds, main="Plug & Play PhyloDecomposition AUC; Birds")
#mtext("AUC=0.6009", side=1)
text(x=0, y=1.1, "3 Eigenvectors each: 28% and 33.8% of variation in plants, animals resp.")
#Plants: 28%, animals 33.8% of variation
pdf(file="PlugPlayTestAUC.pdf", height = 8.5, width=11)
par(mfrow=c(2,2))
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait AUC; Bats")
mtext("AUC=0.7621", side=1)
plot(AUC_PP_Phylo_Bats, main="Plug & Play PhyloDecomposition AUC; Bats")
mtext("AUC=0.8211", side=1)
plot(AUC_PP_Traits_birds, main="Plug & Play Trait AUC; Birds")
mtext("AUC=0.6782", side=1)
plot(AUC_PP_Phylo_birds, main="Plug & Play PhyloDecomposition AUC; Birds")
#mtext("AUC=0.6009", side=1)
text(x=0, y=1, "3 Eigenvectors each: 28% and 33.8% of variation in plants, animals resp.")
#Plants: 28%, animals 33.8% of variation
pdf(file="PlugPlayTestAUC.pdf", height = 8.5, width=11)
par(mfrow=c(2,2))
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait AUC; Bats")
mtext("AUC=0.7621", side=1)
plot(AUC_PP_Phylo_Bats, main="Plug & Play PhyloDecomposition AUC; Bats")
mtext("AUC=0.8211", side=1)
plot(AUC_PP_Traits_birds, main="Plug & Play Trait AUC; Birds")
mtext("AUC=0.6782", side=1)
plot(AUC_PP_Phylo_birds, main="Plug & Play PhyloDecomposition AUC; Birds")
#mtext("AUC=0.6009", side=1)
text(x=-0.1, y=1, "3 Eigenvectors each: 28% and 33.8% of variation in plants, animals resp.")
#Plants: 28%, animals 33.8% of variation
pdf(file="PlugPlayTestAUC.pdf", height = 8.5, width=11)
par(mfrow=c(2,2))
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait AUC; Bats")
mtext("AUC=0.7621", side=1)
plot(AUC_PP_Phylo_Bats, main="Plug & Play PhyloDecomposition AUC; Bats")
mtext("AUC=0.8211", side=1)
plot(AUC_PP_Traits_birds, main="Plug & Play Trait AUC; Birds")
mtext("AUC=0.6782", side=1)
plot(AUC_PP_Phylo_birds, main="Plug & Play PhyloDecomposition AUC; Birds")
#mtext("AUC=0.6009", side=1)
text(x=-1, y=1, "3 Eigenvectors each: 28% and 33.8% of variation in plants, animals resp.")
#Plants: 28%, animals 33.8% of variation
pdf(file="PlugPlayTestAUC.pdf", height = 8.5, width=11)
par(mfrow=c(2,2))
plot(AUC_PP_Traits_Bats, main="Plug & Play Trait AUC; Bats")
mtext("AUC=0.7621", side=1)
plot(AUC_PP_Phylo_Bats, main="Plug & Play PhyloDecomposition AUC; Bats")
mtext("AUC=0.8211", side=1)
plot(AUC_PP_Traits_birds, main="Plug & Play Trait AUC; Birds")
mtext("AUC=0.6782", side=1)
plot(AUC_PP_Phylo_birds, main="Plug & Play PhyloDecomposition AUC; Birds")
mtext("AUC=0.6009", side=1)
#Plants: 28%, animals 33.8% of variation
?npudens
